version: '0.26.0'
image: Visual Studio 2017
only_commits:
  message: /\[deploy\]/
branches:
  only:
  - master
  - dev
environment:
    matrix:
        - nodejs_version: LTS
configuration:
  - Release
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
init:
  # - cmd: git config --global core.autocrlf true
  # If not branch master, changes version format
  - ps: IF ($env:APPVEYOR_REPO_BRANCH -ne "master") {Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_REPO_BRANCH.$env:APPVEYOR_BUILD_NUMBER"} 
install:
  - ps: |
        $env:DEPLOY_ANNOTATIONS = (
                                    $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[annotations]")-or
                                    $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[all]")
                                  )
        $env:DEPLOY_CLI = (
                            $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[cli]")-or
                            $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[npm]")-or
                            $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[all]")
                           )
        $env:DEPLOY_CLASSES = (
                                $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[classes]")-or
                                $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[npm]")-or
                                $env:APPVEYOR_REPO_COMMIT_MESSAGE.Contains("[all]")
                               )
        Install-Product node $env:nodejs_version
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./src/WebTyped/WebTyped.csproj --verbosity m
  - node --version
  - npm --version
build_script:
  ps: |
    if ($env:DEPLOY_ANNOTATIONS) {
     dotnet pack ./src/WebTyped.Annotations -c Release
    }
    if ($env:DEPLOY_CLI) {
     dotnet publish ./src/WebTyped -c Release -o ../WebTyped.Npm/generator/program
     dotnet publish ./src/WebTyped.Cli -c Release -o ../WebTyped.Npm/cli/program
    }
    if ($env:DEPLOY_CLASSES) {
      ECHO "DEPLOY_CLASSES"
      ECHO $env:NPM_TAG

    }
test: off
artifacts:
- path: ./src/WebTyped.Annotations/bin/Release/*.nupkg
  name: nupkgAnnotations
deploy:
  provider: NuGet
  api_key: $(nuget_key)
  skip_symbols: false
  artifact: nupkgAnnotations
  on:
    DEPLOY_ANNOTATIONS: true
after_build:
  ps: |
    IF ($env:APPVEYOR_REPO_BRANCH -ne "master") {$env:NPM_TAG = $env:APPVEYOR_REPO_BRANCH} else {$env:NPM_TAG = "latest"}
    ECHO $env:NPM_TAG
    "//registry.npmjs.org/:_authToken=$env:npm_token`n" | out-file "$env:userprofile\.npmrc" -Encoding ASCII
    (Get-Content ./src/WebTyped.Npm/common/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/common/package.json
    (Get-Content ./src/WebTyped.Npm/fetch/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/fetch/package.json
    (Get-Content ./src/WebTyped.Npm/jquery/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/jquery/package.json
    (Get-Content ./src/WebTyped.Npm/angular/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/angular/package.json
    (Get-Content ./src/WebTyped.Npm/angular4/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/angular4/package.json
    (Get-Content ./src/WebTyped.Npm/generator/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/generator/package.json
    (Get-Content ./src/WebTyped.Npm/cli/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/cli/package.json
    (Get-Content ./README.md) | Set-Content ./src/WebTyped.Npm/cli/README.md
    if ($env:DEPLOY_CLASSES){
       ECHO "DEPLOY_CLASSES"
       ECHO $env:NPM_TAG

    }
    if ($env:DEPLOY_CLI){
      cd ./src/WebTyped.Npm/generator
      npm version $env:APPVEYOR_BUILD_VERSION -m 'v$env:APPVEYOR_BUILD_VERSION'
      npm publish --tag $env:NPM_TAG
      cd ../cli
      npm version $env:APPVEYOR_BUILD_VERSION -m 'v$env:APPVEYOR_BUILD_VERSION'
      npm publish --tag $env:NPM_TAG
      cd ../../../
    }