version: '0.25.0'
image: Visual Studio 2017
branches:
  only:
  - master
  - dev
environment:
    matrix:
        - nodejs_version: LTS
configuration:
  - Release
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
  # If not branch master, changes version format
  - ps: IF ($env:APPVEYOR_REPO_BRANCH -ne "master") {Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_REPO_BRANCH.$env:APPVEYOR_BUILD_NUMBER"} 
install:
  - ps: Install-Product node $env:nodejs_version
  - npm install
  - npm install @types/node --save-dev
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./src/WebTyped/WebTyped.csproj --verbosity m
  - node --version
  - npm --version
build_script:
  - cmd: dotnet publish ./src/WebTyped -c Release -o ../WebTyped.Npm/generator/program
  - cmd: dotnet publish ./src/WebTyped.Cli -c Release -o ../WebTyped.Npm/cli/program
  - cmd: dotnet pack ./src/WebTyped.Annotations -c Release
  - cmd: node node_modules/typescript/bin/tsc -p ./src/WebTyped.Npm/common
  - cmd: node node_modules/typescript/bin/tsc -p ./src/WebTyped.Npm/fetch
  - cmd: node node_modules/typescript/bin/tsc -p ./src/WebTyped.Npm/jquery
  - cmd: node node_modules/typescript/bin/tsc -p ./src/WebTyped.Npm/angular
after_build:
test: off
artifacts:
- path: ./src/WebTyped.Annotations/bin/Release/*.nupkg
  name: nupkgAnnotations
deploy:
  provider: NuGet
  api_key: $(nuget_key)
  skip_symbols: false
  artifact: nupkgAnnotations
after_deploy:
  - ps: IF ($env:APPVEYOR_REPO_BRANCH -ne "master") {$env:NPM_TAG = $env:APPVEYOR_REPO_BRANCH} else {$env:NPM_TAG = "latest"}
  - ECHO %NPM_TAG%
  - ps: '"//registry.npmjs.org/:_authToken=$env:npm_token`n" | out-file "$env:userprofile\.npmrc" -Encoding ASCII'
  - ps: '(Get-Content ./src/WebTyped.Npm/common/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/common/package.json'
  - ps: '(Get-Content ./src/WebTyped.Npm/fetch/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/fetch/package.json'
  - ps: '(Get-Content ./src/WebTyped.Npm/jquery/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/jquery/package.json'
  - ps: '(Get-Content ./src/WebTyped.Npm/angular/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/angular/package.json'
  - ps: '(Get-Content ./src/WebTyped.Npm/generator/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/generator/package.json'
  - ps: '(Get-Content ./src/WebTyped.Npm/cli/package.json) | ForEach-Object { $_ -replace "latest", "$env:APPVEYOR_BUILD_VERSION" } | Set-Content ./src/WebTyped.Npm/cli/package.json'
  - cd ./src/WebTyped.Npm/common 
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../fetch
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../jquery
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../angular
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../generator
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../cli
  - npm version %APPVEYOR_BUILD_VERSION% -m 'v%APPVEYOR_BUILD_VERSION%'
  - npm publish --tag %NPM_TAG%
  - cd ../../../